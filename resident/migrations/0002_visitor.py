# Generated by Django 4.2.3 on 2024-07-01 01:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0001_initial"),
        ("vehicle", "0003_remove_vehicle_code_remove_vehicle_owner_contact_and_more"),
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("resident", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Visitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nonce", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "id32",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(db_index=True)),
                ("created_at_timestamp", models.PositiveIntegerField(db_index=True)),
                (
                    "owned_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "owned_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "published_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unpublished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unpublished_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unapproved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unapproved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "activity",
                    models.CharField(
                        choices=[("check_in", "Check In"), ("check_out", "Check Out")],
                        max_length=50,
                    ),
                ),
                ("no_id", models.CharField(max_length=250)),
                ("full_name", models.CharField(max_length=250)),
                ("gender", models.IntegerField(choices=[(0, "Male"), (1, "Female")])),
                ("address", models.TextField()),
                (
                    "doc_type",
                    models.CharField(
                        choices=[("DL", "Daily Pass"), ("ML", "Monthly Pass")],
                        max_length=10,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_approved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "photo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.file",
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_published_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resident",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="resident.resident",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_site",
                        to="sites.site",
                    ),
                ),
                (
                    "unapproved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unapproved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unpublished_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unpublished_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_vehicle",
                        to="vehicle.vehicle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Visitor",
                "verbose_name_plural": "Visitors",
            },
        ),
    ]
