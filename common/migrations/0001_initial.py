# Generated by Django 4.2.3 on 2024-06-08 06:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import storages.backends.s3boto3


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("sites", "0002_alter_domain_unique"),
    ]

    operations = [
        migrations.CreateModel(
            name="Configuration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="The name of the configuration setting",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "value",
                    models.TextField(
                        help_text="The value of the configuration setting"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the configuration setting",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration",
                "verbose_name_plural": "Configurations",
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nonce", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "id32",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(db_index=True)),
                ("created_at_timestamp", models.PositiveIntegerField(db_index=True)),
                (
                    "owned_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "owned_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "published_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unpublished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unpublished_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unapproved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unapproved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        max_length=300,
                        null=True,
                        storage=storages.backends.s3boto3.S3Boto3Storage(
                            file_overwrite=False, location="dev/"
                        ),
                        upload_to="",
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_approved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_published_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_site",
                        to="sites.site",
                    ),
                ),
                (
                    "unapproved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unapproved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unpublished_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unpublished_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "File",
                "verbose_name_plural": "Files",
            },
        ),
    ]
